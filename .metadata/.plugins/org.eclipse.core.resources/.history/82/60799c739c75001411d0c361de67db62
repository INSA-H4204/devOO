package Modèle;

import java.io.File;
import java.util.*;

/**
 * Une zone est l’ensemble des noeuds et troncons d’une zone géographique. 
 * 
 * @author hgerard
 */
public class Zone extends Observable {

	private Set<Troncon> troncons;
	private Set<Noeud> noeuds;
	private List<Observer> observers;
	private List<PlageHoraire> plages;
	
	/**
	 * Constructeur par défaut de Zone
	 */
	public Zone() {
		troncons = new HashSet<Troncon>();
		noeuds = new HashSet<Noeud>();
		plages = new ArrayList<PlageHoraire>();
		observers = new ArrayList<Observer>();
	}

	/**
	 * @param int x 
	 * @param int y 
	 * @return Noeud resultat
	 */
	public Noeud rechercherNoeudParPosition(int x, int y) {
		// TODO implement here
		return null;
	}

	/**
	 * Renvoie un booleen true si la Zone contient un set de Livraison vide
	 * @return boolean isSansLivraison
	 */
	public boolean verifierSiZoneSansLivraison() {
		for (PlageHoraire plage : plages){
			if (!plage.getLivraisons().isEmpty()){
				return false;
			}
		}
		return true;
	}

	/**
	 * @param File xmlFilePath
	 */
	private void XMLtoDOMLivraisons(File xmlFilePath) {
		// TODO implement here
	}

	/**
	 * @param File xmlFilePath
	 */
	private void XMLtoDOMZone(File xmlFilePath) {
		// TODO implement here
	}

}